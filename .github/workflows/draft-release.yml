name: Create Release

on:
  push:
    branches:
      - main
    tags-ignore:
      - "*"

jobs:

  # -------------
  release:
    name: Create A Release
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: write
      id-token: write

    outputs:
      TAG: ${{ steps.semver.outputs.nextStrict }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Personal Access Token enables git push in actions (repo contents permission)
          token: ${{ secrets.PAT }}

      - name: Calculate next version
        id: semver
        uses: ietf-tools/semver-action@v1.8.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current version
        id: current
        run: echo "version=$(pipx run hatch version | tr -d '\n')" >> $GITHUB_OUTPUT

      - if: ${{ steps.current.outputs.version == steps.semver.outputs.nextStrict || !steps.current.outputs.version }}
        run: exit 1

      - name: Commit version change and tag
        run: |
          git config --global user.name 'GitHub Automation'
          git config --global user.email 'automation[bot]@leocov.com'
          git tag ${{ steps.semver.outputs.nextStrict }}
          git push --tags

      - name: Generate Changelog
        id: changelog
        uses: requarks/changelog-action@v1.9.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.semver.outputs.nextStrict }}
          excludeScopes: "release"

      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.semver.outputs.nextStrict }}
          name: "Release v${{ steps.semver.outputs.nextStrict }}"
          body: ${{ steps.changelog.outputs.changelog }}


  # -------------
  release-build:
    name: Build (${{ matrix.os }})
    needs: [ release ]

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: System Dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: >-
          sudo apt-get update && 
          sudo apt-get install -y 
          libxcb-xinerama0 
          libxkbcommon-x11-0 
          libgl1-mesa-glx 
          libegl1 
          libopengl0
          libxcb-icccm4 
          libxcb-image0 
          libxcb-keysyms1 
          libxcb-randr0 
          libxcb-render-util0 
          libxcb-xinerama0 
          libxcb-xfixes0 
          x11-utils 

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: Release Build
        run: pipx run hatch build -t pyside-app

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "odc-commander-${{ matrix.os }}"
          path: dist


  # -------------
  upload-release-assets:
    name: Upload Release Assets
    needs: [ release, release-build ]

    permissions:
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: odc-commander-*
          path: dist
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R dist/

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload --clobber ${{ needs.release-checks.outputs.TAG }} dist/*
